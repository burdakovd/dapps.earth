worker_processes 2;

events { worker_connections 1024; }

http {
    include    /etc/nginx/mime.types;
    resolver 127.0.0.11;

    gzip on;
    gzip_disable "msie6";
    gzip_types text/css
    	text/plain
    	text/javascript
    	application/javascript
    	application/json
    	application/x-javascript
    	application/xml
    	application/xml+rss
    	application/xhtml+xml
    	application/x-font-ttf
    	application/x-font-opentype
    	application/vnd.ms-fontobject
    	image/svg+xml
    	image/x-icon
    	application/rss+xml
    	application/atom_xml;
    gzip_buffers 16 8k;
    gzip_comp_level 7;
    gzip_min_length 400;

    ssl_certificate     /etc/nginx/certs/BASE_DOMAIN/fullchain;
    ssl_certificate_key /etc/nginx/certs/BASE_DOMAIN/key;
    ssl_session_cache   shared:SSL:40m;
    ssl_session_timeout 4h;
    ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    ssl_session_tickets on;
    ssl_dhparam /etc/nginx/dhparam.pem;

    add_header Allow "GET,HEAD" always;

    upstream docker-proxy {
        server proxy:8080;
    }

    server {
        listen 8080;
        listen [::]:8080;
        server_name www.BASE_DOMAIN;
        return 301 https://BASE_DOMAIN$request_uri;
    }

    server {
    	listen 8080 default_server;
    	listen [::]:8080 default_server;
    	return 301 https://$host$request_uri;
    }

    map $sent_http_content_type $static_frontpage_expires {
        default         off;
        ~image/         30d;
    }

    server {
        listen 443 ssl http2;
        server_name BASE_DOMAIN;
        root /var/www/static;

        expires $static_frontpage_expires;

        location /integrity {
          alias /var/log/dapps.earth-integrity;
          autoindex on;
        }

        location /travis-credentials {
          proxy_pass http://$host:8080;
        }

        location /geth {
          proxy_pass http://geth:8545;
          proxy_method POST;
          proxy_set_header Content-Type application/json;
          proxy_set_body '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}';
        }
    }

    server {
        listen 443 ssl http2;
        server_name www.BASE_DOMAIN;
        return 301 https://BASE_DOMAIN$request_uri;
    }

    server {
        listen 443 ssl http2 default_server;

        if ( $request_method !~ ^(GET|HEAD)$ ) {
          return 405;
        }

        location / {
          proxy_pass http://docker-proxy;
          proxy_set_header Host $host;
        }
    }
}
